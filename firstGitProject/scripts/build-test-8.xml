<?xml version="1.0" encoding="UTF-8"?>

<project name="sw_pm_app" basedir="." default="testReports" >
	<!--
    [ property definitions ]
    [ path and patternset ]
    [ targets ]
    -->
	<property name="app.home" value=".."/>
	<property name="app.name" value="sw_pm_app" />
	<property name="webapp.name" value="webapp" />
	<property name="src.home" value="${app.home}/src"/>
	<property name="test.home" value="${app.home}/test"/>
	<property name="test.reports.home" location="${app.home}/reports"/>	
	<property name="webapp.home" value="${app.home}/${webapp.name}"/>
	<property name="webapp.home.classes" value="${webapp.home}/WEB-INF/classes"/>
	<property name="webapp.home.classes.src" value="${webapp.home}/WEB-INF/classes/src"/>
	<property name="webapp.home.classes.test" value="${webapp.home}/WEB-INF/classes/test"/>
	<property name="webapp.home.lib" value="${webapp.home}/WEB-INF/lib"/>
	<property environment="env"/>
		
	<!-- creation du classpath de compilation -->
	<path id="compile.class.path">
		<pathelement location="${webapp.home.classes.src}"/>
		<pathelement location="${webapp.home.classes.test}"/>
		<fileset dir="${webapp.home.lib}">
			<include name="*.jar"/>
		</fileset>
	</path>
			
	<!-- la cible clean efface toute trace de l'application qui sont sous controle -->
	<target name="clean" depends="environmentDisplay">
		<delete dir="${webapp.home.classes}"/>
	</target>
			
	<!-- 
    la cible init est executee avant toutes les autres 
    elle verifie que les repertoires existent et les cree si necessaire
    -->
    <target name="init" depends="clean">
    	<mkdir dir="${webapp.home.classes.src}"/>
		<mkdir dir="${webapp.home.classes.test}"/>
	</target>
	<target name="javaCompile" depends="init">
			<javac srcdir="${src.home}" destdir="${webapp.home.classes.src}" optimize="${optimize}" debug="${debug}" debuglevel="${debuglevel}" deprecation="on" includeantruntime="false">
				<classpath refid="compile.class.path"/>
			</javac>
	</target>		
	<target name="testCompile" depends="javaCompile">
		<property name="debuglevel" value="lines,vars,sources" />
		<property name="debug" value="false"/>
		<property name="optimize" value="on"/>
		<echo>
		      Compilation des Classes de Tests 
		      Ant home = ${ant.version}
		      Optimize = ${optimize}
		      debug = ${debug}
		      debug level = ${debuglevel}
		</echo>
		<javac srcdir="${test.home}" destdir="${webapp.home.classes.test}" optimize="${optimize}" debug="${debug}" debuglevel="${debuglevel}" deprecation="on" includeantruntime="false">
			<classpath refid="compile.class.path"/>
		</javac>
	</target>
	<target name="unitTests" depends="testCompile">
		<mkdir dir="${test.reports.home}"/>
		<junit printsummary="yes">
			<classpath refid="compile.class.path"/>
			<formatter type="brief" usefile="false"/>
			<formatter type="xml"/>
			<batchtest todir="${test.reports.home}" failureproperty="failed" errorproperty="failed">
				<fileset dir="${webapp.home.classes.test}" includes="**/*Test.class" />
			</batchtest>
		</junit>
	</target>
	<target name="testReports" depends="unitTests">
		<mkdir dir="${test.reports.home}/html"/>
		<junitreport todir="${test.reports.home}">
			<fileset dir="${test.reports.home}">
				<include name="TEST-*.xml"/>
			</fileset>
			<report todir="${test.reports.home}/html"/>
		</junitreport>
	</target>
			
			<target name="environmentDisplay">
			    <echo message="Jenkins workspace: ${env.WORKSPACE}"/>
			    <echo message="Job directory: ${env.WORKSPACE}../../jobs/${env.JOB_NAME}"/>
			    <echo message="Build data: ${env.WORKSPACE}../../jobs/${env.JOB_NAME}/build/${env.BUILD_ID}"/>
			</target>

</project>